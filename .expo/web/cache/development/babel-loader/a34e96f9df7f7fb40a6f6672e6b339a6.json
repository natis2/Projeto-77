{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport StaticContainer from \"./StaticContainer\";\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nexport default function SceneView(_ref) {\n  var screen = _ref.screen,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      routeState = _ref.routeState,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      options = _ref.options;\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n\n  var _useOptionsGetters = useOptionsGetters({\n    key: route.key,\n    options: options,\n    navigation: navigation\n  }),\n      addOptionsGetter = _useOptionsGetters.addOptionsGetter;\n\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var getCurrentState = React.useCallback(function () {\n    var state = getState();\n    var currentRoute = state.routes.find(function (r) {\n      return r.key === route.key;\n    });\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  var setCurrentState = React.useCallback(function (child) {\n    var state = getState();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      routes: state.routes.map(function (r) {\n        return r.key === route.key ? _objectSpread(_objectSpread({}, r), {}, {\n          state: child\n        }) : r;\n      })\n    }));\n  }, [getState, route.key, setState]);\n  var isInitialRef = React.useRef(true);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n  });\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(EnsureSingleNavigator, null, React.createElement(StaticContainer, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation: navigation,\n    route: route\n  }) : null)));\n}","map":{"version":3,"mappings":"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","names":["React","NavigationStateContext","StaticContainer","EnsureSingleNavigator","useOptionsGetters","SceneView","screen","route","navigation","routeState","getState","setState","options","navigatorKeyRef","useRef","getKey","useCallback","current","key","addOptionsGetter","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","map","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","Provider","value","name","render","children"],"sources":["SceneView.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  Route,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport useOptionsGetters from './useOptionsGetters';\nimport type { NavigationProp, RouteConfig, EventMapBase } from './types';\n\ntype Props<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  screen: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n  navigation: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n}: Props<State, ScreenOptions, EventMap>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}