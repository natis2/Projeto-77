{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport * from \"./types\";\nvar ENABLE_SCREENS = true;\nexport function enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\nexport var NativeScreen = function (_React$Component) {\n  _inherits(NativeScreen, _React$Component);\n\n  var _super = _createSuper(NativeScreen);\n\n  function NativeScreen() {\n    _classCallCheck(this, NativeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          activityState = _this$props.activityState,\n          style = _this$props.style,\n          _this$props$enabled = _this$props.enabled,\n          enabled = _this$props$enabled === void 0 ? ENABLE_SCREENS : _this$props$enabled,\n          rest = _objectWithoutProperties(_this$props, [\"active\", \"activityState\", \"style\", \"enabled\"]);\n\n      if (enabled) {\n        if (active !== undefined && activityState === undefined) {\n          activityState = active !== 0 ? 2 : 0;\n        }\n\n        return React.createElement(View, _extends({\n          hidden: activityState === 0,\n          style: [style, {\n            display: activityState !== 0 ? 'flex' : 'none'\n          }]\n        }, rest));\n      }\n\n      return React.createElement(View, rest);\n    }\n  }]);\n\n  return NativeScreen;\n}(React.Component);\nexport var Screen = Animated.createAnimatedComponent(NativeScreen);\nexport var ScreenContainer = View;\nexport var NativeScreenContainer = View;\nexport var ScreenStack = View;\nexport var ScreenStackHeaderBackButtonImage = function ScreenStackHeaderBackButtonImage(props) {\n  return React.createElement(View, null, React.createElement(Image, _extends({\n    resizeMode: \"center\",\n    fadeDuration: 0\n  }, props)));\n};\nexport var ScreenStackHeaderRightView = function ScreenStackHeaderRightView(props) {\n  return React.createElement(View, props);\n};\nexport var ScreenStackHeaderLeftView = function ScreenStackHeaderLeftView(props) {\n  return React.createElement(View, props);\n};\nexport var ScreenStackHeaderCenterView = function ScreenStackHeaderCenterView(props) {\n  return React.createElement(View, props);\n};\nexport var ScreenStackHeaderSearchBarView = function ScreenStackHeaderSearchBarView(props) {\n  return React.createElement(View, props);\n};\nexport var ScreenStackHeaderConfig = View;\nexport var SearchBar = View;\nexport var ScreenStackHeaderSubview = View;\nexport var shouldUseActivityState = true;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAWA;AAEA,IAAIC,cAAc,GAAG,IAArB;AAEA,OAAO,SAASC,aAAT,GAAyD;EAAA,IAAlCC,mBAAkC,uEAAZ,IAAY;EAC9DF,cAAc,GAAGE,mBAAjBF;AACD;AAED,OAAO,SAASG,cAAT,GAAmC;EACxC,OAAOH,cAAP;AACD;AAED,WAAaI,YAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OACEC,kBAAsB;MACpB,kBAMI,KAAKC,KANT;MAAA,IACEC,MADF,eACEA,MADF;MAAA,IAEEC,aAFF,eAEEA,aAFF;MAAA,IAGEC,KAHF,eAGEA,KAHF;MAAA,sCAIEC,OAJF;MAAA,IAIEA,OAJF,oCAIYV,cAJZ;MAAA,IAKKW,IALL;;MAQA,IAAID,OAAJ,EAAa;QACX,IAAIH,MAAM,KAAKK,SAAXL,IAAwBC,aAAa,KAAKI,SAA9C,EAAyD;UACvDJ,aAAa,GAAGD,MAAM,KAAK,CAAXA,GAAe,CAAfA,GAAmB,CAAnCC;QACD;;QACD,OACET,oBAACc,IAAD;UAEEC,MAAM,EAAEN,aAAa,KAAK,CAF5B;UAGEC,KAAK,EAAE,CAACA,KAAD,EAAQ;YAAEM,OAAO,EAAEP,aAAa,KAAK,CAAlBA,GAAsB,MAAtBA,GAA+B;UAA1C,CAAR;QAHT,GAIMG,IAJN,EADF;MAQD;;MAED,OAAOZ,oBAACc,IAAD,EAAUF,IAAV,CAAP;IACD;EAzBH;;EAAA;AAAA,EAAkCZ,KAAK,CAACiB,SAAxC;AA4BA,OAAO,IAAMC,MAAM,GAAGC,QAAQ,CAACC,uBAATD,CAAiCd,YAAjCc,CAAf;AAEP,OAAO,IAAME,eAA0D,GAAGP,IAAnE;AAEP,OAAO,IAAMQ,qBAAgE,GAAGR,IAAzE;AAEP,OAAO,IAAMS,WAAkD,GAAGT,IAA3D;AAEP,OAAO,IAAMU,gCAAgC,GAC3CjB,SADWiB,gCACXjB,MAD8C;EAAA,OAG9CP,oBAACc,IAAD,QACEd,oBAACyB,KAAD;IAAOC,UAAU,EAAC,QAAlB;IAA2BC,YAAY,EAAE;EAAzC,GAAgDpB,KAAhD,EADF,CAH8C;AAAA,CAAzC;AAQP,OAAO,IAAMqB,0BAA0B,GACrCrB,SADWqB,0BACXrB,MADwC;EAAA,OAExBP,oBAACc,IAAD,EAAUP,KAAV,CAFwB;AAAA,CAAnC;AAIP,OAAO,IAAMsB,yBAAyB,GACpCtB,SADWsB,yBACXtB,MADuC;EAAA,OAEvBP,oBAACc,IAAD,EAAUP,KAAV,CAFuB;AAAA,CAAlC;AAIP,OAAO,IAAMuB,2BAA2B,GACtCvB,SADWuB,2BACXvB,MADyC;EAAA,OAEzBP,oBAACc,IAAD,EAAUP,KAAV,CAFyB;AAAA,CAApC;AAIP,OAAO,IAAMwB,8BAA8B,GACzCxB,SADWwB,8BACXxB,MAD4C;EAAA,OAE5BP,oBAACc,IAAD,EAAUP,KAAV,CAF4B;AAAA,CAAvC;AAIP,OAAO,IAAMyB,uBAA0E,GAAGlB,IAAnF;AAGP,OAAO,IAAMmB,SAA8C,GAAGnB,IAAvD;AAEP,OAAO,IAAMoB,wBAEX,GAAGpB,IAFE;AAIP,OAAO,IAAMqB,sBAAsB,GAAG,IAA/B","names":["React","ENABLE_SCREENS","enableScreens","shouldEnableScreens","screensEnabled","NativeScreen","render","props","active","activityState","style","enabled","rest","undefined","View","hidden","display","Component","Screen","Animated","createAnimatedComponent","ScreenContainer","NativeScreenContainer","ScreenStack","ScreenStackHeaderBackButtonImage","Image","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> = View;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>> = View;\n\nexport const shouldUseActivityState = true;\n"]},"metadata":{},"sourceType":"module"}